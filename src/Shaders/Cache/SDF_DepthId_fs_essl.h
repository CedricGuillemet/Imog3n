static const uint8_t SDF_DepthId_fs_essl[2606] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x76, // FSH.o.><.......v
	0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // iewInfos........
	0xcc, 0xcc, 0x0a, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, 0x69, 0x65, 0x77, 0x04, 0x01, 0x00, // ...cameraView...
	0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x08, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x69, 0x6e, // ........boundMin
	0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x0a, 0x62, 0x6f, 0x75, 0x6e, 0x64, // ...........bound
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x0a, // Ratio...........
	0x53, 0x44, 0x46, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, // SDFSampler......
	0x00, 0x00, 0xcc, 0xcc, 0xb5, 0x09, 0x00, 0x00, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // ........varying 
	0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // highp vec2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // coord0;.uniform 
	0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x69, 0x65, 0x77, 0x49, // highp vec4 viewI
	0x6e, 0x66, 0x6f, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x68, 0x69, // nfos;.uniform hi
	0x67, 0x68, 0x70, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, // ghp mat4 cameraV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x68, 0x69, 0x67, // iew;.uniform hig
	0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x69, 0x6e, // hp vec4 boundMin
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, // ;.uniform highp 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x3b, // vec4 boundRatio;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x73, 0x61, // .uniform lowp sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x53, 0x44, 0x46, 0x53, 0x61, 0x6d, 0x70, 0x6c, // mpler3D SDFSampl
	0x65, 0x72, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, // er;.void main ()
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // .{.  highp vec2 
	0x75, 0x76, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x75, 0x76, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, // uv_1;.  uv_1 = (
	0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, // vec2(1.0, 1.0) -
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, //  v_texcoord0);. 
	0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, //  highp vec3 tmpv
	0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, // ar_2;.  tmpvar_2
	0x20, 0x3d, 0x20, 0x28, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, //  = (cameraView *
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, //  vec4(0.0, 0.0, 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // 0.0, 1.0)).xyz;.
	0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, //   highp vec3 tmp
	0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // var_3;.  tmpvar_
	0x33, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, // 3.z = 1.0;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x33, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x75, 0x76, 0x5f, 0x31, // var_3.x = ((uv_1
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, // .x * 2.0) - 1.0)
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x2e, 0x79, 0x20, 0x3d, // ;.  tmpvar_3.y =
	0x20, 0x28, 0x28, 0x75, 0x76, 0x5f, 0x31, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x29, //  ((uv_1.y - 0.5)
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x78, 0x20, //  * (viewInfos.x 
	0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // * 2.0));.  highp
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, //  vec4 tmpvar_4;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x30, //   tmpvar_4.w = 0
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x78, // .0;.  tmpvar_4.x
	0x79, 0x7a, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x74, // yz = normalize(t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, // mpvar_3);.  high
	0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, // p vec3 tmpvar_5;
	0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x63, // .  tmpvar_5 = (c
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, // ameraView * tmpv
	0x61, 0x72, 0x5f, 0x34, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x6d, 0x65, 0x64, // ar_4).xyz;.  med
	0x69, 0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // iump vec2 tmpvar
	0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, // _6;.  highp vec3
	0x20, 0x6f, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x6f, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x74, 0x6d, //  o_7;.  o_7 = tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, // pvar_2;.  highp 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x64, 0x5f, 0x38, 0x20, // vec3 d_8;.  d_8 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x6c, 0x6f, // = tmpvar_5;.  lo
	0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, // wp vec2 tmpvar_9
	0x3b, 0x0a, 0x20, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ;.  bool tmpvar_
	0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, // 10;.  tmpvar_10 
	0x3d, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x77, // = bool(0);.  low
	0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x31, 0x3b, // p float dist_11;
	0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, // .  highp vec3 tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // pvar_13;.  tmpva
	0x72, 0x5f, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x28, 0x0a, 0x20, 0x20, // r_13 = (abs((.  
	0x20, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x2d, 0x20, 0x62, //   ((tmpvar_2 - b
	0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x62, // oundMin.xyz) * b
	0x6f, 0x75, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x20, // oundRatio.xyz). 
	0x20, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, //   - vec3(0.5, 0.
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x33, // 5, 0.5))) - vec3
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, // (0.5, 0.5, 0.5))
	0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, // ;.  highp vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // mpvar_14;.  tmpv
	0x61, 0x72, 0x5f, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, // ar_14 = max (tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // var_13, 0.0);.  
	0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x73, 0x71, 0x72, 0x74, 0x28, // dist_11 = (sqrt(
	0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2c, 0x20, // dot (tmpvar_14, 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x6d, 0x69, // tmpvar_14)) + mi
	0x6e, 0x20, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // n (max (tmpvar_1
	0x33, 0x2e, 0x78, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x74, // 3.x, .    max (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x2e, 0x79, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, // mpvar_13.y, tmpv
	0x61, 0x72, 0x5f, 0x31, 0x33, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x29, 0x2c, 0x20, 0x30, 0x2e, // ar_13.z).  ), 0.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x68, 0x69, 0x67, 0x68, // 0));.  for (high
	0x70, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x5f, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, // p int i_12 = 0; 
	0x69, 0x5f, 0x31, 0x32, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x69, 0x5f, 0x31, 0x32, // i_12 < 100; i_12
	0x2b, 0x2b, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, // ++) {.    lowp v
	0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x3b, 0x0a, 0x20, // ec4 tmpvar_15;. 
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x74, //    tmpvar_15 = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x28, 0x53, 0x44, 0x46, 0x53, 0x61, 0x6d, // exture3D (SDFSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x6f, 0x5f, 0x37, 0x20, 0x2b, 0x20, 0x0a, // pler, (((o_7 + .
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x64, 0x5f, 0x38, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x73, //       (d_8 * dis
	0x74, 0x5f, 0x31, 0x31, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x20, 0x2d, 0x20, 0x62, 0x6f, // t_11).    ) - bo
	0x75, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x62, 0x6f, // undMin.xyz) * bo
	0x75, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // undRatio.xyz));.
	0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x64, //     dist_11 = (d
	0x69, 0x73, 0x74, 0x5f, 0x31, 0x31, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ist_11 + tmpvar_
	0x31, 0x35, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // 15.x);.    if ((
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x2e, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, // tmpvar_15.x <= 0
	0x2e, 0x30, 0x30, 0x31, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, // .001)) {.      l
	0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // owp vec2 tmpvar_
	0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // 16;.      tmpvar
	0x5f, 0x31, 0x36, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _16.y = 1.0;.   
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x2e, 0x78, 0x20, 0x3d, //    tmpvar_16.x =
	0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  dist_11;.      
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // tmpvar_9 = tmpva
	0x72, 0x5f, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // r_16;.      tmpv
	0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x31, 0x29, 0x3b, // ar_10 = bool(1);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, // .      break;.  
	0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //   };.  };.  if (
	0x21, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, // !(tmpvar_10)) {.
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x76, //     tmpvar_9 = v
	0x65, 0x63, 0x32, 0x28, 0x39, 0x39, 0x39, 0x39, 0x39, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, // ec2(99999.0, 0.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, // );.    tmpvar_10
	0x20, 0x3d, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, //  = bool(1);.  };
	0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x3d, 0x20, 0x74, 0x6d, // .  tmpvar_6 = tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, // pvar_9;.  if ((t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x30, 0x30, // mpvar_6.x < 1000
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, // .0)) {.    mediu
	0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // mp vec3 tmpvar_1
	0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, // 7;.    tmpvar_17
	0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x28, //  = (tmpvar_2 + (
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // tmpvar_5 * tmpva
	0x72, 0x5f, 0x36, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, // r_6.x));.    low
	0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, // p vec3 tmpvar_18
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x2e, // ;.    tmpvar_18.
	0x78, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x28, 0x53, // x = texture3D (S
	0x44, 0x46, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x74, 0x6d, // DFSampler, (((tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // pvar_17 - vec3(0
	0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, // .5, 0.0, 0.0)) -
	0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, //  boundMin.xyz) *
	0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x2e, 0x78, 0x79, 0x7a, 0x29, //  boundRatio.xyz)
	0x29, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ).x;.    tmpvar_
	0x31, 0x38, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, // 18.y = texture3D
	0x20, 0x28, 0x53, 0x44, 0x46, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x28, //  (SDFSampler, ((
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, // (tmpvar_17 - vec
	0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // 3(0.0, 0.5, 0.0)
	0x29, 0x20, 0x2d, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x2e, 0x78, 0x79, 0x7a, // ) - boundMin.xyz
	0x29, 0x20, 0x2a, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x2e, 0x78, // ) * boundRatio.x
	0x79, 0x7a, 0x29, 0x29, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // yz)).x;.    tmpv
	0x61, 0x72, 0x5f, 0x31, 0x38, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ar_18.z = textur
	0x65, 0x33, 0x44, 0x20, 0x28, 0x53, 0x44, 0x46, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // e3D (SDFSampler,
	0x20, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x2d, 0x20, //  (((tmpvar_17 - 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, // vec3(0.0, 0.0, 0
	0x2e, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x2e, // .5)) - boundMin.
	0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x69, // xyz) * boundRati
	0x6f, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, // o.xyz)).x;.    l
	0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // owp vec3 tmpvar_
	0x31, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // 19;.    tmpvar_1
	0x39, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x74, // 9 = normalize((t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x28, 0x53, 0x44, 0x46, 0x53, 0x61, 0x6d, // exture3D (SDFSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, // pler, (.      (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x2d, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, // mpvar_17 - bound
	0x4d, 0x69, 0x6e, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2a, 0x20, // Min.xyz).     * 
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // boundRatio.xyz))
	0x2e, 0x78, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x29, 0x29, // .x - tmpvar_18))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, // ;.    mediump ve
	0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x3b, 0x0a, 0x20, 0x20, // c4 tmpvar_20;.  
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x2e, 0x78, 0x79, 0x20, 0x3d, //   tmpvar_20.xy =
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, //  tmpvar_6;.    t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x2e, 0x7a, 0x77, 0x20, 0x3d, 0x20, 0x74, 0x6d, // mpvar_20.zw = tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // pvar_19.xy;.    
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, // gl_FragColor = t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, // mpvar_20;.  } el
	0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, // se {.    gl_Frag
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x39, 0x39, 0x39, // Color = vec4(999
	0x39, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, // 9.0, 0.0, 0.0, 0
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,             // .0);.  };.}...
};
