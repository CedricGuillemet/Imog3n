static const uint8_t DepthId_PlaneHelpers_fs_glsl[2533] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x09, 0x76, // FSH.o.><.......v
	0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // iewInfos........
	0xcc, 0xcc, 0x0a, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, 0x69, 0x65, 0x77, 0x04, 0x01, 0x00, // ...cameraView...
	0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x0e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, // ........depthIdS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, // ampler..........
	0x90, 0x09, 0x00, 0x00, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, // ....varying vec2
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x75, 0x6e, //  v_texcoord0;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x69, 0x65, 0x77, 0x49, // iform vec4 viewI
	0x6e, 0x66, 0x6f, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // nfos;.uniform ma
	0x74, 0x34, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // t4 cameraView;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, //  depthIdSampler;
	0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, // .void main ().{.
	0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x3b, 0x0a, //   vec4 color_1;.
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x32, 0x3b, //   float depth_2;
	0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, // .  vec2 uv_3;.  
	0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // depth_2 = textur
	0x65, 0x32, 0x44, 0x20, 0x28, 0x64, 0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, // e2D (depthIdSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // ler, v_texcoord0
	0x29, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x75, 0x76, 0x5f, 0x33, 0x2e, 0x79, 0x20, 0x3d, 0x20, // ).x;.  uv_3.y = 
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x3b, 0x0a, 0x20, // v_texcoord0.y;. 
	0x20, 0x75, 0x76, 0x5f, 0x33, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  uv_3.x = (1.0 -
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x29, 0x3b, //  v_texcoord0.x);
	0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, // .  vec3 tmpvar_4
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x28, // ;.  tmpvar_4 = (
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, // cameraView * vec
	0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // 4(0.0, 0.0, 0.0,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, //  1.0)).xyz;.  ve
	0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, // c3 tmpvar_5;.  t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, // mpvar_5.z = 1.0;
	0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x78, 0x20, 0x3d, 0x20, // .  tmpvar_5.x = 
	0x28, 0x28, 0x75, 0x76, 0x5f, 0x33, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, // ((uv_3.x * 2.0) 
	0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // - 1.0);.  tmpvar
	0x5f, 0x35, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // _5.y = ((v_texco
	0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // ord0.y - 0.5) * 
	0x28, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, // (viewInfos.x * 2
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, // .0));.  vec4 tmp
	0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // var_6;.  tmpvar_
	0x36, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, // 6.w = 0.0;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // var_6.xyz = norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x29, 0x3b, // alize(tmpvar_5);
	0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, // .  vec3 tmpvar_7
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x28, // ;.  tmpvar_7 = (
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, // cameraView * tmp
	0x76, 0x61, 0x72, 0x5f, 0x36, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, // var_6).xyz;.  ve
	0x63, 0x33, 0x20, 0x6f, 0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x6f, 0x5f, 0x38, 0x20, 0x3d, 0x20, // c3 o_8;.  o_8 = 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, // tmpvar_4;.  vec3
	0x20, 0x64, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x64, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x6d, //  d_9;.  d_9 = tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // pvar_7;.  float 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x62, 0x6f, 0x6f, // tmpvar_10;.  boo
	0x6c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x74, // l tmpvar_11;.  t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x28, // mpvar_11 = bool(
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x73, 0x74, // 0);.  float dist
	0x5f, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x32, 0x20, 0x3d, // _12;.  dist_12 =
	0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, //  0.0;.  for (int
	0x20, 0x69, 0x5f, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x5f, 0x31, 0x33, 0x20, //  i_13 = 0; i_13 
	0x3c, 0x20, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x69, 0x5f, 0x31, 0x33, 0x2b, 0x2b, 0x29, 0x20, 0x7b, // < 100; i_13++) {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // .    float tmpva
	0x72, 0x5f, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // r_14;.    tmpvar
	0x5f, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x6f, 0x5f, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x64, // _14 = ((o_8 + (d
	0x5f, 0x39, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x32, 0x29, 0x29, 0x2e, 0x79, // _9 * dist_12)).y
	0x20, 0x2d, 0x20, 0x2d, 0x32, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //  - -2.0);.    if
	0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x20, 0x3c, 0x3d, 0x20, //  ((tmpvar_14 <= 
	0x30, 0x2e, 0x30, 0x30, 0x31, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.001)) {.      
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, 0x74, // tmpvar_10 = dist
	0x5f, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // _12;.      tmpva
	0x72, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x31, 0x29, 0x3b, 0x0a, // r_11 = bool(1);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x32, 0x20, //  };.    dist_12 
	0x3d, 0x20, 0x28, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x32, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, // = (dist_12 + tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // var_14);.  };.  
	0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x29, // if (!(tmpvar_11)
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // ) {.    tmpvar_1
	0x30, 0x20, 0x3d, 0x20, 0x39, 0x39, 0x39, 0x39, 0x39, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 0 = 99999.0;.   
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x62, 0x6f, 0x6f, //  tmpvar_11 = boo
	0x6c, 0x28, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, // l(1);.  };.  vec
	0x33, 0x20, 0x6f, 0x5f, 0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x6f, 0x5f, 0x31, 0x35, 0x20, 0x3d, // 3 o_15;.  o_15 =
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, //  tmpvar_4;.  vec
	0x33, 0x20, 0x64, 0x5f, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x64, 0x5f, 0x31, 0x36, 0x20, 0x3d, // 3 d_16;.  d_16 =
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x62, 0x6f, 0x6f, //  tmpvar_7;.  boo
	0x6c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, // l tmpvar_17;.  t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x28, // mpvar_17 = bool(
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x73, 0x74, // 0);.  float dist
	0x5f, 0x31, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x38, 0x20, 0x3d, // _18;.  dist_18 =
	0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, //  0.0;.  for (int
	0x20, 0x69, 0x5f, 0x31, 0x39, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x5f, 0x31, 0x39, 0x20, //  i_19 = 0; i_19 
	0x3c, 0x20, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x69, 0x5f, 0x31, 0x39, 0x2b, 0x2b, 0x29, 0x20, 0x7b, // < 100; i_19++) {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // .    float tmpva
	0x72, 0x5f, 0x32, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // r_20;.    tmpvar
	0x5f, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x6f, 0x5f, 0x31, 0x35, 0x20, 0x2b, 0x20, 0x28, // _20 = ((o_15 + (
	0x64, 0x5f, 0x31, 0x36, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x38, 0x29, 0x29, // d_16 * dist_18))
	0x2e, 0x79, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, // .y - 1.0);.    i
	0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x20, 0x3c, 0x3d, // f ((tmpvar_20 <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.001)) {.     
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x62, 0x6f, 0x6f, //  tmpvar_17 = boo
	0x6c, 0x28, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, // l(1);.      brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, // k;.    };.    di
	0x73, 0x74, 0x5f, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x31, 0x38, // st_18 = (dist_18
	0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x29, 0x3b, 0x0a, 0x20, //  + tmpvar_20);. 
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x74, 0x6d, 0x70, 0x76, //  };.  if (!(tmpv
	0x61, 0x72, 0x5f, 0x31, 0x37, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, // ar_17)) {.    tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x31, // pvar_17 = bool(1
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, // );.  };.  vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // mpvar_21;.  tmpv
	0x61, 0x72, 0x5f, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ar_21 = (tmpvar_
	0x34, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x2a, 0x20, // 4 + (tmpvar_7 * 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x63, // tmpvar_10));.  c
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, // olor_1 = vec4(0.
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, // 0, 0.0, 0.0, 0.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, // );.  if ((depth_
	0x32, 0x20, 0x3e, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // 2 > 1000.0)) {. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x5f, //    float intens_
	0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x78, 0x5f, 0x32, // 22;.    vec3 x_2
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x5f, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x74, // 3;.    x_23 = (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // mpvar_21 - vec3(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // 0.0, -2.0, 0.0))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // ;.    vec2 tmpva
	0x72, 0x5f, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // r_24;.    tmpvar
	0x5f, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x31, 0x2e, 0x32, // _24 = fract((1.2
	0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x2e, 0x78, 0x7a, 0x29, //  * tmpvar_21.xz)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, // );.    float tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // var_25;.    tmpv
	0x61, 0x72, 0x5f, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x20, 0x28, 0x28, // ar_25 = clamp ((
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x30, // (tmpvar_24.x - 0
	0x2e, 0x30, 0x35, 0x34, 0x29, 0x20, 0x2f, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x32, 0x29, 0x2c, 0x20, // .054) / 0.012), 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 0.0, 1.0);.    f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x3b, 0x0a, // loat tmpvar_26;.
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x3d, 0x20, //     tmpvar_26 = 
	0x63, 0x6c, 0x61, 0x6d, 0x70, 0x20, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // clamp (((tmpvar_
	0x32, 0x34, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x34, 0x29, 0x20, 0x2f, 0x20, // 24.y - 0.054) / 
	0x30, 0x2e, 0x30, 0x31, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // 0.012), 0.0, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x5f, 0x32, 0x32, // );.    intens_22
	0x20, 0x3d, 0x20, 0x28, 0x6d, 0x69, 0x6e, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x0a, //  = (min ((1.0/(.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x73, 0x71, 0x72, 0x74, 0x28, //       pow (sqrt(
	0x64, 0x6f, 0x74, 0x20, 0x28, 0x78, 0x5f, 0x32, 0x33, 0x2c, 0x20, 0x78, 0x5f, 0x32, 0x33, 0x29, // dot (x_23, x_23)
	0x29, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x2c, 0x20, // ), 1.5).    )), 
	0x30, 0x2e, 0x33, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // 0.3) * ((tmpvar_
	0x32, 0x35, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, // 25 * .      (tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x30, 0x20, 0x2d, 0x20, // var_25 * (3.0 - 
	0x28, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, // (2.0 * tmpvar_25
	0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x74, 0x6d, 0x70, // ))).    ) * (tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // var_26 * .      
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, // (tmpvar_26 * (3.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // 0 - (2.0 * tmpva
	0x72, 0x5f, 0x32, 0x36, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x3b, // r_26))).    )));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x5f, 0x32, 0x32, 0x20, 0x2b, // .    intens_22 +
	0x3d, 0x20, 0x30, 0x2e, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // = 0.3;.    vec4 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, // tmpvar_27;.    t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, // mpvar_27.w = 1.0
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x2e, // ;.    tmpvar_27.
	0x78, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x5f, 0x32, 0x32, 0x3b, 0x0a, 0x20, // x = intens_22;. 
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x2e, 0x79, 0x20, 0x3d, //    tmpvar_27.y =
	0x20, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x5f, 0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  intens_22;.    
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x69, 0x6e, // tmpvar_27.z = in
	0x74, 0x65, 0x6e, 0x73, 0x5f, 0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, // tens_22;.    col
	0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, // or_1 = tmpvar_27
	0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, // ;.  };.  gl_Frag
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x3b, // Color = color_1;
	0x0a, 0x7d, 0x0a, 0x0a, 0x00,                                                                   // .}...
};
