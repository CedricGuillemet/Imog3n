static const uint8_t DepthId_Color_fs_mtl[1264] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x15, 0x64, // FSH.o.><.......d
	0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, // epthIdSamplerSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x15, 0x64, // pler...........d
	0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x54, 0x65, 0x78, // epthIdSamplerTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x0e, 0x64, // ture...........d
	0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x10, 0x00, 0x00, // epthIdSampler...
	0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x81, 0x04, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // ...........#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lMain_out.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, // float4 bgfx_Frag
	0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, // Data0 [[color(0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, // ]];.};..struct x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, // latMtlMain_in.{.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, //     float2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, // coord0 [[user(lo
	0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, // cn0)]];.};..frag
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ment xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // _out xlatMtlMain
	0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, // (xlatMtlMain_in 
	0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, // in [[stage_in]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  texture2d<float
	0x3e, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // > depthIdSampler
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, //  [[texture(0)]],
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x49, 0x64, //  sampler depthId
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // SamplerSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, // [sampler(0)]]).{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // .    xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, // _out out = {};. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x38, 0x35, 0x20, 0x3d, //    float4 _285 =
	0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, //  depthIdSampler.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, // sample(depthIdSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, // mplerSampler, in
	0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, // .v_texcoord0);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x35, 0x20, 0x3d, //    float3 _235 =
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  normalize(float
	0x33, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x2e, 0x7a, 0x77, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // 3(_285.zw, 1.0 -
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x2e, 0x7a, 0x20, 0x2a, 0x20, //  sqrt((_285.z * 
	0x5f, 0x32, 0x38, 0x35, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x2e, // _285.z) + (_285.
	0x77, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x38, 0x35, 0x2e, 0x77, 0x29, 0x29, 0x29, 0x29, 0x3b, 0x0a, // w * _285.w))));.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x39, 0x37, 0x3b, //     float4 _297;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x2e, 0x78, 0x20, // .    if (_285.x 
	0x3e, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // > 1000.0).    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x66, //         _297 = f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // loat4(0.20000000
	0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, // 2980232238769531
	0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, // 25, 0.2000000029
	0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, // 8023223876953125
	0x2c, 0x20, 0x30, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, // , 0.200000002980
	0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, // 23223876953125, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // 1.0);.    }.    
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // else.    {.     
	0x20, 0x20, 0x20, 0x5f, 0x32, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //    _297 = float4
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x38, // (float3(1.0, 0.8
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, 0x39, 0x35, // 0000001192092895
	0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, // 5078125, 0.60000
	0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, // 0023841857910156
	0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 25) * (((float3(
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // 1.0) * fast::max
	0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x37, // (dot(float3(0.57
	0x37, 0x33, 0x35, 0x30, 0x32, 0x35, 0x38, 0x38, 0x32, 0x37, 0x32, 0x30, 0x39, 0x34, 0x37, 0x32, // 7350258827209472
	0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x35, 0x29, 0x2c, 0x20, 0x30, // 65625), _235), 0
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // .0)) + ((float3(
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // 1.0) * fast::max
	0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, // (dot(float3(-0.5
	0x37, 0x37, 0x33, 0x35, 0x30, 0x32, 0x35, 0x38, 0x38, 0x32, 0x37, 0x32, 0x30, 0x39, 0x34, 0x37, // 7735025882720947
	0x32, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x35, 0x29, 0x2c, 0x20, // 265625), _235), 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, // 0.0)) * 0.300000
	0x30, 0x31, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, 0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, // 0119209289550781
	0x32, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, // 25)) + float3(0.
	0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, // 2000000029802322
	0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 3876953125)), 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, // 0);.    }.    ou
	0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, // t.bgfx_FragData0
	0x20, 0x3d, 0x20, 0x5f, 0x32, 0x39, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, //  = _297;.    ret
	0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x20, 0x00, // urn out;.}.... .
};
