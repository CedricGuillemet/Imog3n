static const uint8_t DepthId_PlaneHelpers_fs_mtl[3166] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x15, 0x64, // FSH.o.><.......d
	0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, // epthIdSamplerSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x15, 0x64, // pler...........d
	0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x54, 0x65, 0x78, // epthIdSamplerTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x09, 0x76, // ture...........v
	0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // iewInfos........
	0xcc, 0xcc, 0x0a, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x10, // ...cameraView...
	0x00, 0x04, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x0e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, // ........depthIdS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xcc, // ampler..........
	0xc6, 0x0b, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, // ....#include <me
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, // tal_stdlib>.#inc
	0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, // lude <simd/simd.
	0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, // h>..using namesp
	0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, // ace metal;..stru
	0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ct _Global.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, //  float4 viewInfo
	0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, // s;.    float4x4 
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // cameraView;.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // in_out.{.    flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, // at4 bgfx_FragDat
	0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, // a0 [[color(0)]];
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, // .};..struct xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // MtlMain_in.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, //  float2 v_texcoo
	0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, // rd0 [[user(locn0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, // )]];.};..fragmen
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, // t xlatMtlMain_ou
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, // t xlatMtlMain(xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, // atMtlMain_in in 
	0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, // [[stage_in]], co
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, // nstant _Global& 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, // _mtl_u [[buffer(
	0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, // 0)]], texture2d<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, // float> depthIdSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // mpler [[texture(
	0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x64, 0x65, // 0)]], sampler de
	0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, // pthIdSamplerSamp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, // ler [[sampler(0)
	0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ]]).{.    xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, // lMain_out out = 
	0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // {};.    float4 _
	0x35, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, // 567 = depthIdSam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x65, 0x70, 0x74, // pler.sample(dept
	0x68, 0x49, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hIdSamplerSample
	0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, in.v_texcoord
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, // 0);.    float _4
	0x33, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x36, 0x37, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 33 = _567.x;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x34, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x5f, //  float4 _438 = _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x56, 0x69, 0x65, 0x77, // mtl_u.cameraView
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, //  * float4(0.0, 0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // .0, 0.0, 1.0);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x33, 0x39, 0x20, 0x3d, //    float3 _439 =
	0x20, 0x5f, 0x34, 0x33, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, //  _438.xyz;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x36, 0x36, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // loat4 _668;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x36, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // float _669;.    
	0x5f, 0x36, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _669 = 0.0;.    
	0x5f, 0x36, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, // _668 = float4(0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, // 0);.    float _6
	0x37, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // 74;.    float4 _
	0x36, 0x37, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, // 676;.    for (in
	0x74, 0x20, 0x5f, 0x36, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x2d, 0x32, 0x3b, 0x20, 0x5f, 0x36, 0x36, // t _667 = -2; _66
	0x37, 0x20, 0x3c, 0x20, 0x33, 0x3b, 0x20, 0x5f, 0x36, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x36, // 7 < 3; _669 = _6
	0x37, 0x34, 0x2c, 0x20, 0x5f, 0x36, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x37, 0x36, 0x2c, // 74, _668 = _676,
	0x20, 0x5f, 0x36, 0x36, 0x37, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //  _667++).    {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x36, //        _676 = _6
	0x36, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x37, 0x34, // 68;.        _674
	0x20, 0x3d, 0x20, 0x5f, 0x36, 0x36, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _669;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x38, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  float _681;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x36, 0x38, 0x32, //      float4 _682
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, // ;.        for (i
	0x6e, 0x74, 0x20, 0x5f, 0x36, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x2d, 0x32, 0x3b, 0x20, 0x5f, 0x36, // nt _670 = -2; _6
	0x37, 0x30, 0x20, 0x3c, 0x20, 0x33, 0x3b, 0x20, 0x5f, 0x36, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x5f, // 70 < 3; _676 = _
	0x36, 0x38, 0x32, 0x2c, 0x20, 0x5f, 0x36, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x38, 0x31, // 682, _674 = _681
	0x2c, 0x20, 0x5f, 0x36, 0x37, 0x30, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , _670++).      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x36, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x69, 0x6e, // float2 _657 = in
	0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x20, 0x20, // .v_texcoord0;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x35, 0x37, 0x2e, 0x78, //           _657.x
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, //  = 1.0 - in.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // xcoord0.x;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, //        float2 _4
	0x36, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, // 65 = _657 + ((fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x36, 0x37, 0x30, 0x29, // oat2(float(_670)
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x36, 0x36, 0x37, 0x29, 0x29, 0x20, 0x2a, // , float(_667)) *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, //  float2(1.0, _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x78, 0x29, // l_u.viewInfos.x)
	0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // ) * 0.0005000000
	0x32, 0x33, 0x37, 0x34, 0x38, 0x37, 0x32, 0x35, 0x36, 0x35, 0x32, 0x36, 0x39, 0x34, 0x37, 0x30, // 2374872565269470
	0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 21484375);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x34, //        float4 _4
	0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x61, 0x6d, 0x65, // 84 = _mtl_u.came
	0x72, 0x61, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // raView * float4(
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // normalize(float3
	0x28, 0x28, 0x5f, 0x34, 0x36, 0x35, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, // ((_465.x * 2.0) 
	0x2d, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x36, 0x35, 0x2e, 0x79, 0x20, 0x2d, // - 1.0, (_465.y -
	0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  0.5) * (_mtl_u.
	0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, 0x2e, // viewInfos.x * 2.
	0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, // 0), 1.0)), 0.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x20, 0x5f, 0x36, 0x37, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at _672;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      do.        
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x38, 0x30, //       float _580
	0x20, 0x3d, 0x20, 0x5f, 0x34, 0x38, 0x34, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _484.y;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x36, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x33, 0x38, 0x2e, 0x79, 0x20, 0x2d, //  _605 = _438.y -
	0x20, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  (-1.0);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x35, //          if ((_5
	0x38, 0x30, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, // 80 >= 0.0) || (_
	0x36, 0x30, 0x35, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, // 605 <= 0.0)).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x36, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x39, 0x39, 0x39, 0x39, 0x39, 0x2e, //    _672 = 99999.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x36, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x30, 0x35, 0x20, 0x2f, 0x20, 0x61, 0x62, // _672 = _605 / ab
	0x73, 0x28, 0x5f, 0x35, 0x38, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // s(_580);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, //             } wh
	0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ile(false);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x34, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x33, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x34, // 494 = _439 + (_4
	0x38, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x36, 0x37, 0x32, 0x29, 0x3b, 0x0a, // 84.xyz * _672);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x32, 0x20, 0x5f, 0x36, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // t2 _612 = fract(
	0x28, 0x5f, 0x34, 0x39, 0x34, 0x2e, 0x78, 0x7a, 0x20, 0x2a, 0x20, 0x34, 0x2e, 0x30, 0x29, 0x20, // (_494.xz * 4.0) 
	0x2a, 0x20, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, // * 0.100000001490
	0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, // 116119384765625)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x36, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, // oat2 _628 = frac
	0x74, 0x28, 0x28, 0x28, 0x5f, 0x34, 0x39, 0x34, 0x2e, 0x78, 0x7a, 0x20, 0x2a, 0x20, 0x34, 0x30, // t(((_494.xz * 40
	0x2e, 0x30, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, // .0) + float2(0.5
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, // )) * 0.100000001
	0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, // 4901161193847656
	0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 25);.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x66, //  float _514 = (f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, // ast::min(((step(
	0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, // 0.10000000149011
	0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, // 6119384765625, _
	0x36, 0x31, 0x32, 0x2e, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 612.x) * step(0.
	0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, // 1000000014901161
	0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x36, 0x31, // 19384765625, _61
	0x32, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, // 2.y)) * 0.400000
	0x30, 0x30, 0x35, 0x39, 0x36, 0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, // 0059604644775390
	0x36, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // 625) + 0.6000000
	0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, // 2384185791015625
	0x2c, 0x20, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, // , ((step(0.10000
	0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, // 0001490116119384
	0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x36, 0x32, 0x38, 0x2e, 0x78, 0x29, 0x20, // 765625, _628.x) 
	0x2a, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // * step(0.1000000
	0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, // 0149011611938476
	0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x36, 0x32, 0x38, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, // 5625, _628.y)) *
	0x20, 0x30, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, //  0.2000000029802
	0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2b, // 3223876953125) +
	0x20, 0x30, 0x2e, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, 0x30, 0x39, //  0.8000000119209
	0x32, 0x38, 0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x30, // 28955078125) * 0
	0x2e, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, // .300000011920928
	0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // 955078125) - 0.0
	0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, 0x35, // 5000000074505805
	0x39, 0x36, 0x39, 0x32, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 96923828125;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x34, //          if ((_4
	0x33, 0x33, 0x20, 0x3e, 0x20, 0x38, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, // 33 > 8000.0) && 
	0x28, 0x5f, 0x36, 0x37, 0x32, 0x20, 0x3c, 0x20, 0x38, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x29, // (_672 < 8000.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // .            {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x36, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x37, 0x36, 0x20, 0x2b, 0x20, 0x6d, 0x69, 0x78, // 682 = _676 + mix
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, // (float4(0.200000
	0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, // 0029802322387695
	0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // 3125, 0.20000000
	0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, // 2980232238769531
	0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, // 25, 0.2000000029
	0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, // 8023223876953125
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, // , 1.0), float4(_
	0x35, 0x31, 0x34, 0x2c, 0x20, 0x5f, 0x35, 0x31, 0x34, 0x2c, 0x20, 0x5f, 0x35, 0x31, 0x34, 0x2c, // 514, _514, _514,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x61, //  1.0), float4(fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x2c, // st::max(mix(1.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x5f, 0x34, 0x39, //  0.0, length(_49
	0x34, 0x2e, 0x78, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x39, 0x39, 0x39, 0x39, // 4.xz) * 0.019999
	0x39, 0x39, 0x39, 0x35, 0x35, 0x32, 0x39, 0x36, 0x35, 0x31, 0x36, 0x34, 0x31, 0x38, 0x34, 0x35, // 9995529651641845
	0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, // 703125), 0.0)));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x5f, 0x36, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x37, 0x34, 0x20, 0x2b, 0x20, 0x31, //  _681 = _674 + 1
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0;.            
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, // }.            el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // se.            {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x5f, 0x36, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x37, 0x36, 0x3b, 0x0a, 0x20, 0x20, //  _682 = _676;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, //               _6
	0x38, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x37, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 81 = _674;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, //  }.    }.    out
	0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, // .bgfx_FragData0 
	0x3d, 0x20, 0x5f, 0x36, 0x36, 0x38, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // = _668 / float4(
	0x5f, 0x36, 0x36, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // _669);.    retur
	0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x70, 0x00,             // n out;.}....p.
};
