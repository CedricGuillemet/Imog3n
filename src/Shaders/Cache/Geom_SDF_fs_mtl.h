static const uint8_t Geom_SDF_fs_mtl[6628] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x18, 0x70, // FSH.o.><.......p
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // rimitivesSampler
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xcc, // Sampler.........
	0xcc, 0x18, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, // ..primitivesSamp
	0x6c, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // lerTexture......
	0x00, 0x00, 0xcc, 0xcc, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x49, // .....primitivesI
	0x6e, 0x66, 0x6f, 0x12, 0x01, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x09, 0x76, 0x69, // nfo..0........vi
	0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, // ewInfos.........
	0xcc, 0x0a, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x01, 0x20, 0x00, // ..boundScale.. .
	0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x08, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x12, // .......boundMin.
	0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x11, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, // ..........primit
	0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, // ivesSampler.....
	0x00, 0x00, 0x00, 0xcc, 0xcc, 0x17, 0x19, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, // .........#includ
	0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, // e <metal_stdlib>
	0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, // .#include <simd/
	0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, // simd.h>..using n
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, // amespace metal;.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, // .struct _Global.
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x69, 0x65, // {.    float4 vie
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // wInfos;.    floa
	0x74, 0x34, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x20, // t4 boundMin;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x63, 0x61, //  float4 boundSca
	0x6c, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x70, // le;.    float4 p
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x3b, 0x0a, 0x7d, // rimitivesInfo;.}
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lMain_out.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, // float4 bgfx_Frag
	0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, // Data0 [[color(0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, // ]];.};..struct x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, // latMtlMain_in.{.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, //     float2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, // coord0 [[user(lo
	0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, // cn0)]];.};..frag
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ment xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // _out xlatMtlMain
	0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, // (xlatMtlMain_in 
	0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, // in [[stage_in]],
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, //  constant _Globa
	0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, // l& _mtl_u [[buff
	0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // er(0)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, // 2d<float> primit
	0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x74, 0x65, // ivesSampler [[te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, // xture(0)]], samp
	0x6c, 0x65, 0x72, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, // ler primitivesSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // mplerSampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, // ampler(0)]]).{. 
	0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, //    xlatMtlMain_o
	0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ut out = {};.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x28, //  float3 _650 = (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // float3(in.v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x69, // oord0, _mtl_u.vi
	0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // ewInfos.y) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x78, // l_u.boundScale.x
	0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x6f, 0x75, // yz) + _mtl_u.bou
	0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // ndMin.xyz;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x37, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x70, 0x72, 0x69, // loat4 _785 = pri
	0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, // mitivesSampler.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, // ample(primitives
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // SamplerSampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, // float2(0.125, 0.
	0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 001953125));.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x37, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x70, //  float4 _794 = p
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // rimitivesSampler
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, // .sample(primitiv
	0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // esSamplerSampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x33, 0x37, 0x35, 0x2c, 0x20, // , float2(0.375, 
	0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 0.001953125));. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x30, 0x33, 0x20, 0x3d, //    float4 _803 =
	0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, //  primitivesSampl
	0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, // er.sample(primit
	0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, // ivesSamplerSampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x36, 0x32, 0x35, // er, float2(0.625
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, // , 0.001953125));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x32, 0x31, // .    float4 _821
	0x20, 0x3d, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, //  = primitivesSam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, // pler.sample(prim
	0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, // itivesSamplerSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x38, // pler, float2(0.8
	0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, // 75, 0.001953125)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, // );.    float3 _8
	0x33, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x79, 0x7a, 0x77, 0x3b, 0x0a, 0x20, // 37 = _821.yzw;. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x36, 0x33, 0x20, 0x3d, //    float3 _863 =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x36, 0x35, //  abs((float4(_65
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // 0, 1.0) * float4
	0x78, 0x34, 0x28, 0x5f, 0x37, 0x38, 0x35, 0x2c, 0x20, 0x5f, 0x37, 0x39, 0x34, 0x2c, 0x20, 0x5f, // x4(_785, _794, _
	0x38, 0x30, 0x33, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, // 803, float4(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, //  0.0, 0.0, 1.0))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ).xyz);.    floa
	0x74, 0x20, 0x5f, 0x39, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // t _903 = fast::m
	0x69, 0x6e, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x66, 0x61, 0x73, // in(fast::min(fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // t::max(fast::max
	0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x5f, 0x38, // (abs(_863.x - _8
	0x32, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x79, 0x29, 0x2c, 0x20, // 21.y), _863.y), 
	0x5f, 0x38, 0x36, 0x33, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // _863.z), fast::m
	0x61, 0x78, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x38, 0x36, // ax(fast::max(_86
	0x33, 0x2e, 0x78, 0x2c, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x79, 0x20, // 3.x, abs(_863.y 
	0x2d, 0x20, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x2c, 0x20, 0x5f, 0x38, 0x36, 0x33, // - _821.z)), _863
	0x2e, 0x7a, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // .z)), fast::max(
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x78, // fast::max(_863.x
	0x2c, 0x20, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, // , _863.y), abs(_
	0x38, 0x36, 0x33, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x77, 0x29, 0x29, // 863.z - _821.w))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x31, // );.    float _91
	0x31, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, // 1 = dot(float2(1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, // .0), float2(1.0)
	0x20, 0x2f, 0x20, 0x28, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x7a, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x38, //  / (_821.zw * _8
	0x32, 0x31, 0x2e, 0x7a, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 21.zw));.    flo
	0x61, 0x74, 0x20, 0x5f, 0x39, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, // at _920 = dot(fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x38, 0x36, 0x33, 0x2e, // oat2(1.0), _863.
	0x79, 0x7a, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x7a, 0x77, 0x20, 0x2a, 0x20, // yz / (_821.zw * 
	0x5f, 0x38, 0x32, 0x31, 0x2e, 0x7a, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // _821.zw));.    f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x39, 0x32, // loat _940 = (_92
	0x30, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x32, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x39, 0x31, // 0 * _920) - (_91
	0x31, 0x20, 0x2a, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // 1 * (dot(float2(
	0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x79, 0x7a, 0x20, 0x2a, // 1.0), (_863.yz *
	0x20, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x79, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x38, 0x32, //  _863.yz) / (_82
	0x31, 0x2e, 0x7a, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x7a, 0x77, 0x29, 0x29, // 1.zw * _821.zw))
	0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  - 1.0));.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, // oat _1585;.    i
	0x66, 0x20, 0x28, 0x5f, 0x39, 0x34, 0x30, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, // f (_940 >= 0.0).
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, //     {.        _1
	0x35, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, // 585 = fast::min(
	0x5f, 0x39, 0x30, 0x33, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // _903, fast::max(
	0x28, 0x5f, 0x39, 0x32, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x39, 0x34, // (_920 - sqrt(_94
	0x30, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x39, 0x31, 0x31, 0x2c, 0x20, 0x5f, 0x38, 0x36, 0x33, // 0)) / _911, _863
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // .x));.    }.    
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // else.    {.     
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x30, 0x33, 0x3b, //    _1585 = _903;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .    }.    float
	0x20, 0x5f, 0x39, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  _964 = dot(floa
	0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // t2(1.0), float2(
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x79, 0x77, 0x20, // 1.0) / (_821.yw 
	0x2a, 0x20, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x79, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // * _821.yw));.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, //  float _973 = do
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, // t(float2(1.0), _
	0x38, 0x36, 0x33, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x79, // 863.xz / (_821.y
	0x77, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x79, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, // w * _821.yw));. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x39, 0x33, 0x20, 0x3d, 0x20, //    float _993 = 
	0x28, 0x5f, 0x39, 0x37, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x37, 0x33, 0x29, 0x20, 0x2d, 0x20, // (_973 * _973) - 
	0x28, 0x5f, 0x39, 0x36, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, // (_964 * (dot(flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x38, 0x36, 0x33, 0x2e, // at2(1.0), (_863.
	0x78, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x78, 0x7a, 0x29, 0x20, 0x2f, 0x20, // xz * _863.xz) / 
	0x28, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x79, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x32, 0x31, 0x2e, // (_821.yw * _821.
	0x79, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // yw)) - 1.0));.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x36, 0x3b, 0x0a, 0x20, //   float _1586;. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x39, 0x39, 0x33, 0x20, 0x3e, 0x3d, 0x20, 0x30, //    if (_993 >= 0
	0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0).    {.      
	0x20, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, //   _1586 = fast::
	0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x35, 0x38, 0x35, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // min(_1585, fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x28, 0x5f, 0x39, 0x37, 0x33, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, // :max((_973 - sqr
	0x74, 0x28, 0x5f, 0x39, 0x39, 0x33, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x39, 0x36, 0x34, 0x2c, // t(_993)) / _964,
	0x20, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, //  _863.y));.    }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // .    else.    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x36, 0x20, 0x3d, 0x20, //         _1586 = 
	0x5f, 0x31, 0x35, 0x38, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // _1585;.    }.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x64, //  float _1017 = d
	0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, // ot(float2(1.0), 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, // float2(1.0) / (_
	0x38, 0x32, 0x31, 0x2e, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x79, 0x7a, // 821.yz * _821.yz
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, // ));.    float _1
	0x30, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 026 = dot(float2
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x78, 0x79, 0x20, 0x2f, // (1.0), _863.xy /
	0x20, 0x28, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x32, 0x31, //  (_821.yz * _821
	0x2e, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .yz));.    float
	0x20, 0x5f, 0x31, 0x30, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x32, 0x36, 0x20, //  _1046 = (_1026 
	0x2a, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x36, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x31, // * _1026) - (_101
	0x37, 0x20, 0x2a, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // 7 * (dot(float2(
	0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x78, 0x79, 0x20, 0x2a, // 1.0), (_863.xy *
	0x20, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x38, 0x32, //  _863.xy) / (_82
	0x31, 0x2e, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x32, 0x31, 0x2e, 0x79, 0x7a, 0x29, 0x29, // 1.yz * _821.yz))
	0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  - 1.0));.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, // oat _1587;.    i
	0x66, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x34, 0x36, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // f (_1046 >= 0.0)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // .    {.        _
	0x31, 0x35, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, // 1587 = fast::min
	0x28, 0x5f, 0x31, 0x35, 0x38, 0x36, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // (_1586, fast::ma
	0x78, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x32, 0x36, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // x((_1026 - sqrt(
	0x5f, 0x31, 0x30, 0x34, 0x36, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x37, 0x2c, // _1046)) / _1017,
	0x20, 0x5f, 0x38, 0x36, 0x33, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, //  _863.z));.    }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // .    else.    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x37, 0x20, 0x3d, 0x20, //         _1587 = 
	0x5f, 0x31, 0x35, 0x38, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // _1586;.    }.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x64, //  float _1068 = d
	0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, // ot(float3(1.0), 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, // float3(1.0) / (_
	0x38, 0x33, 0x37, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x33, 0x37, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 837 * _837));.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x34, 0x20, 0x3d, 0x20, //   float _1074 = 
	0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, // dot(float3(1.0),
	0x20, 0x5f, 0x38, 0x36, 0x33, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x38, 0x33, 0x37, 0x20, 0x2a, 0x20, //  _863 / (_837 * 
	0x5f, 0x38, 0x33, 0x37, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _837));.    floa
	0x74, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x37, 0x34, // t _1090 = (_1074
	0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x31, 0x30, //  * _1074) - (_10
	0x36, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 68 * (dot(float3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x38, 0x36, 0x33, 0x20, 0x2a, 0x20, 0x5f, // (1.0), (_863 * _
	0x38, 0x36, 0x33, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x38, 0x33, 0x37, 0x20, 0x2a, 0x20, 0x5f, // 863) / (_837 * _
	0x38, 0x33, 0x37, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 837)) - 1.0));. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x38, 0x3b, 0x0a, //    float _1588;.
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x39, 0x30, 0x20, 0x3e, 0x3d, //     if (_1090 >=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  0.0).    {.    
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, //     _1588 = fast
	0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x35, 0x38, 0x37, 0x2c, 0x20, 0x28, 0x5f, 0x31, // ::min(_1587, (_1
	0x30, 0x37, 0x34, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x39, 0x30, // 074 - sqrt(_1090
	0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // )) / _1068);.   
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //  }.    else.    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x38, 0x20, // {.        _1588 
	0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // = _1587;.    }. 
	0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x36, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x69, 0x6e, //    int _693 = in
	0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, // t(_mtl_u.primiti
	0x76, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // vesInfo.x);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float _1599;.   
	0x20, 0x5f, 0x31, 0x35, 0x39, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x38, 0x3b, 0x0a, //  _1599 = _1588;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x31, 0x39, 0x3b, 0x0a, //     float _719;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x30, 0x39, 0x3b, //     float _1509;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x39, 0x20, 0x3d, // .    int _1589 =
	0x20, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //  1;.    float _1
	0x35, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, // 590 = 0.00390625
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x3b, 0x20, 0x5f, 0x31, 0x35, // ;.    for (; _15
	0x38, 0x39, 0x20, 0x3c, 0x20, 0x5f, 0x36, 0x39, 0x33, 0x3b, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x39, // 89 < _693; _1599
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x30, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x30, 0x20, //  = _1509, _1590 
	0x3d, 0x20, 0x5f, 0x37, 0x31, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x39, 0x2b, 0x2b, 0x29, // = _719, _1589++)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, // .    {.        i
	0x66, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x38, 0x39, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x36, 0x39, 0x33, // f (_1589 >= _693
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ).        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x35, 0x20, 0x3d, 0x20, //  float4 _1165 = 
	0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // primitivesSample
	0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, // r.sample(primiti
	0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // vesSamplerSample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x2c, // r, float2(0.125,
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x5f, //  0.001953125 + _
	0x31, 0x35, 0x39, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1590));.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x70, // float4 _1174 = p
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // rimitivesSampler
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, // .sample(primitiv
	0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // esSamplerSampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x33, 0x37, 0x35, 0x2c, 0x20, // , float2(0.375, 
	0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, // 0.001953125 + _1
	0x35, 0x39, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 590));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x70, 0x72, // loat4 _1183 = pr
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // imitivesSampler.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, // sample(primitive
	0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // sSamplerSampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, //  float2(0.625, 0
	0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x35, // .001953125 + _15
	0x39, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 90));.        fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x70, 0x72, 0x69, // oat4 _1201 = pri
	0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, // mitivesSampler.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, // ample(primitives
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // SamplerSampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, // float2(0.875, 0.
	0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x35, 0x39, // 001953125 + _159
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 0));.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x30, // at3 _1217 = _120
	0x31, 0x2e, 0x79, 0x7a, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 1.yzw;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x61, 0x62, // loat3 _1243 = ab
	0x73, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x36, 0x35, 0x30, 0x2c, 0x20, // s((float4(_650, 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x28, // 1.0) * float4x4(
	0x5f, 0x31, 0x31, 0x36, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x34, 0x2c, 0x20, 0x5f, 0x31, // _1165, _1174, _1
	0x31, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, // 183, float4(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, //  0.0, 0.0, 1.0))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).xyz);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, // float _1283 = fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, // st::min(fast::mi
	0x6e, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, 0x73, 0x74, // n(fast::max(fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, // ::max(abs(_1243.
	0x78, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, // x - _1201.y), _1
	0x32, 0x34, 0x33, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x7a, 0x29, // 243.y), _1243.z)
	0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, 0x73, 0x74, // , fast::max(fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x78, 0x2c, 0x20, 0x61, // ::max(_1243.x, a
	0x62, 0x73, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, // bs(_1243.y - _12
	0x30, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x7a, 0x29, // 01.z)), _1243.z)
	0x29, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, 0x73, // ), fast::max(fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x78, 0x2c, 0x20, // t::max(_1243.x, 
	0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, // _1243.y), abs(_1
	0x32, 0x34, 0x33, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x77, 0x29, // 243.z - _1201.w)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ));.        floa
	0x74, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, // t _1291 = dot(fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oat2(1.0), float
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, // 2(1.0) / (_1201.
	0x7a, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x7a, 0x77, 0x29, 0x29, 0x3b, // zw * _1201.zw));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x31, 0x33, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 1300 = dot(float
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x79, 0x7a, // 2(1.0), _1243.yz
	0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x7a, 0x77, 0x20, 0x2a, 0x20, 0x5f, //  / (_1201.zw * _
	0x31, 0x32, 0x30, 0x31, 0x2e, 0x7a, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 1201.zw));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x30, 0x20, 0x3d, //    float _1320 =
	0x20, 0x28, 0x5f, 0x31, 0x33, 0x30, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x30, 0x30, 0x29, //  (_1300 * _1300)
	0x20, 0x2d, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x39, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x64, 0x6f, 0x74, //  - (_1291 * (dot
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x28, 0x5f, // (float2(1.0), (_
	0x31, 0x32, 0x34, 0x33, 0x2e, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, // 1243.yz * _1243.
	0x79, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x7a, 0x77, 0x20, // yz) / (_1201.zw 
	0x2a, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x7a, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x31, // * _1201.zw)) - 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .0));.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // oat _1591;.     
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x32, 0x30, 0x20, 0x3e, 0x3d, 0x20, //    if (_1320 >= 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // 0.0).        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x31, //            _1591
	0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x32, //  = fast::min(_12
	0x38, 0x33, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x28, 0x5f, // 83, fast::max((_
	0x31, 0x33, 0x30, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x31, 0x33, 0x32, // 1300 - sqrt(_132
	0x30, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x31, 0x2c, 0x20, 0x5f, 0x31, 0x32, // 0)) / _1291, _12
	0x34, 0x33, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 43.x));.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, // }.        else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, //      _1591 = _12
	0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 83;.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x34, //       float _134
	0x34, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, // 4 = dot(float2(1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, // .0), float2(1.0)
	0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x79, 0x77, 0x20, 0x2a, 0x20, 0x5f, //  / (_1201.yw * _
	0x31, 0x32, 0x30, 0x31, 0x2e, 0x79, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 1201.yw));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x33, 0x20, 0x3d, //    float _1353 =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, //  dot(float2(1.0)
	0x2c, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, // , _1243.xz / (_1
	0x32, 0x30, 0x31, 0x2e, 0x79, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x79, // 201.yw * _1201.y
	0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // w));.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x35, // at _1373 = (_135
	0x33, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x33, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x31, // 3 * _1353) - (_1
	0x33, 0x34, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 344 * (dot(float
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x78, // 2(1.0), (_1243.x
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x78, 0x7a, 0x29, 0x20, 0x2f, 0x20, // z * _1243.xz) / 
	0x28, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x79, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x30, // (_1201.yw * _120
	0x31, 0x2e, 0x79, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // 1.yw)) - 1.0));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x35, 0x39, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // 592;.        if 
	0x28, 0x5f, 0x31, 0x33, 0x37, 0x33, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // (_1373 >= 0.0). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, //      _1592 = fas
	0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x31, 0x2c, 0x20, 0x66, 0x61, // t::min(_1591, fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x28, 0x5f, 0x31, 0x33, 0x35, 0x33, 0x20, 0x2d, // st::max((_1353 -
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x31, 0x33, 0x37, 0x33, 0x29, 0x29, 0x20, 0x2f, 0x20, //  sqrt(_1373)) / 
	0x5f, 0x31, 0x33, 0x34, 0x34, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x79, 0x29, 0x29, // _1344, _1243.y))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     else.       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  {.            _
	0x31, 0x35, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x31, 0x3b, 0x0a, 0x20, 0x20, // 1592 = _1591;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float _1397 = do
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, // t(float2(1.0), f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, // loat2(1.0) / (_1
	0x32, 0x30, 0x31, 0x2e, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x79, // 201.yz * _1201.y
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // z));.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, // at _1406 = dot(f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x34, // loat2(1.0), _124
	0x33, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x79, 0x7a, // 3.xy / (_1201.yz
	0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, //  * _1201.yz));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, //        float _14
	0x32, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x30, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 26 = (_1406 * _1
	0x34, 0x30, 0x36, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x39, 0x37, 0x20, 0x2a, 0x20, // 406) - (_1397 * 
	0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, // (dot(float2(1.0)
	0x2c, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x5f, 0x31, // , (_1243.xy * _1
	0x32, 0x34, 0x33, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x30, 0x31, // 243.xy) / (_1201
	0x2e, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x79, 0x7a, 0x29, 0x29, // .yz * _1201.yz))
	0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  - 1.0));.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x3b, 0x0a, 0x20, //   float _1593;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x36, //        if (_1426
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  >= 0.0).       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  {.            _
	0x31, 0x35, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, // 1593 = fast::min
	0x28, 0x5f, 0x31, 0x35, 0x39, 0x32, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // (_1592, fast::ma
	0x78, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x30, 0x36, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // x((_1406 - sqrt(
	0x5f, 0x31, 0x34, 0x32, 0x36, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x37, 0x2c, // _1426)) / _1397,
	0x20, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  _1243.z));.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //     }.        el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // se.        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x20, 0x3d, //          _1593 =
	0x20, 0x5f, 0x31, 0x35, 0x39, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1592;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // }.        float 
	0x5f, 0x31, 0x34, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // _1448 = dot(floa
	0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // t3(1.0), float3(
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x31, 0x37, 0x20, 0x2a, 0x20, // 1.0) / (_1217 * 
	0x5f, 0x31, 0x32, 0x31, 0x37, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1217));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x34, 0x20, 0x3d, 0x20, 0x64, //  float _1454 = d
	0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, // ot(float3(1.0), 
	0x5f, 0x31, 0x32, 0x34, 0x33, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x31, 0x37, 0x20, 0x2a, // _1243 / (_1217 *
	0x20, 0x5f, 0x31, 0x32, 0x31, 0x37, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1217));.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x37, 0x30, 0x20, 0x3d, 0x20, //   float _1470 = 
	0x28, 0x5f, 0x31, 0x34, 0x35, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x34, 0x29, 0x20, // (_1454 * _1454) 
	0x2d, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x34, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, // - (_1448 * (dot(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, // float3(1.0), (_1
	0x32, 0x34, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x33, 0x29, 0x20, 0x2f, 0x20, 0x28, // 243 * _1243) / (
	0x5f, 0x31, 0x32, 0x31, 0x37, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x37, 0x29, 0x29, 0x20, // _1217 * _1217)) 
	0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // - 1.0));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x34, 0x3b, 0x0a, 0x20, 0x20, //  float _1594;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x37, 0x30, 0x20, //       if (_1470 
	0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // >= 0.0).        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, // {.            _1
	0x35, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, // 594 = fast::min(
	0x5f, 0x31, 0x35, 0x39, 0x33, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x35, 0x34, 0x20, 0x2d, 0x20, // _1593, (_1454 - 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x31, 0x34, 0x37, 0x30, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, // sqrt(_1470)) / _
	0x31, 0x34, 0x34, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // 1448);.        }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, // .        else.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x39, //     _1594 = _159
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // 3;.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x31, 0x36, 0x20, //      float _716 
	0x3d, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // = _1201.x;.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x38, 0x20, 0x3d, //    float _1498 =
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x30, 0x2e, 0x35, //  fast::clamp(0.5
	0x20, 0x2b, 0x20, 0x28, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x39, //  + ((0.5 * (_159
	0x34, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x39, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x37, // 4 - _1599)) / _7
	0x31, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 16), 0.0, 1.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x35, 0x30, 0x39, 0x20, 0x3d, 0x20, //         _1509 = 
	0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x34, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x39, // mix(_1594, _1599
	0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x38, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x37, 0x31, // , _1498) - ((_71
	0x36, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x38, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 6 * _1498) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 0 - _1498));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x31, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x39, //      _719 = _159
	0x30, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, // 0 + 0.00390625;.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, //     }.    out.bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, // fx_FragData0 = f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x30, // loat4(_1599, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // , 0.0, 0.0);.   
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, //  return out;.}..
	0x00, 0x00, 0x60, 0x00,                                                                         // ..`.
};
