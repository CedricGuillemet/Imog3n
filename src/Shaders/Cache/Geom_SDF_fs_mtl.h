static const uint8_t Geom_SDF_fs_mtl[2187] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x18, 0x70, // FSH.o.><.......p
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // rimitivesSampler
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xcc, // Sampler.........
	0xcc, 0x18, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, // ..primitivesSamp
	0x6c, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // lerTexture......
	0x00, 0x00, 0xcc, 0xcc, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x49, // .....primitivesI
	0x6e, 0x66, 0x6f, 0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x09, 0x76, 0x69, // nfo...........vi
	0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, // ewInfos.........
	0xcc, 0x11, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, // ..primitivesSamp
	0x6c, 0x65, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0xe6, 0x07, 0x00, // ler.............
	0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, // .#include <metal
	0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, // _stdlib>.#includ
	0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, // e <simd/simd.h>.
	0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, // .using namespace
	0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, //  metal;..struct 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // _Global.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x3b, 0x0a, // oat4 viewInfos;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, //     float4 primi
	0x74, 0x69, 0x76, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, // tivesInfo;.};..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // truct xlatMtlMai
	0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // n_out.{.    floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // t4 bgfx_FragData
	0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, // 0 [[color(0)]];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..struct xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // tlMain_in.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // float2 v_texcoor
	0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, // d0 [[user(locn0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, // ]];.};..fragment
	0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, //  xlatMtlMain_out
	0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, //  xlatMtlMain(xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, // tMtlMain_in in [
	0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // [stage_in]], con
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, // stant _Global& _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, // mtl_u [[buffer(0
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, // )]], texture2d<f
	0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, // loat> primitives
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Sampler [[textur
	0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // e(0)]], sampler 
	0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // primitivesSample
	0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, // rSampler [[sampl
	0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, // er(0)]]).{.    x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, // latMtlMain_out o
	0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // ut = {};.    flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // at2 _345 = in.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, // texcoord0 * 256.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x34, // 0;.    float _34
	0x38, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x34, 0x35, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 8 = _345.x;.    
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x33, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, 0x28, 0x5f, // int _386 = int(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, // mtl_u.primitives
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // Info.x);.    flo
	0x61, 0x74, 0x20, 0x5f, 0x36, 0x38, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x38, // at _687;.    _68
	0x37, 0x20, 0x3d, 0x20, 0x28, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x28, 0x66, 0x6c, 0x6f, // 7 = (length((flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x33, 0x34, 0x38, 0x2c, 0x20, 0x5f, 0x33, 0x34, 0x35, 0x2e, 0x79, // at4(_348, _345.y
	0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, // , _mtl_u.viewInf
	0x6f, 0x73, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // os.y, 1.0) * flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, // at4x4(primitives
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, // Sampler.sample(p
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // rimitivesSampler
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // Sampler, float2(
	0x30, 0x2e, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, // 0.125, 0.0019531
	0x32, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, // 25)), primitives
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, // Sampler.sample(p
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // rimitivesSampler
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // Sampler, float2(
	0x30, 0x2e, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, // 0.375, 0.0019531
	0x32, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, // 25)), primitives
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, // Sampler.sample(p
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // rimitivesSampler
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // Sampler, float2(
	0x30, 0x2e, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, // 0.625, 0.0019531
	0x32, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, // 25)), float4(0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // , 0.0, 0.0, 1.0)
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, // )).xyz) - 1.0) *
	0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  128.0;.    floa
	0x74, 0x20, 0x5f, 0x34, 0x30, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // t _409;.    floa
	0x74, 0x20, 0x5f, 0x36, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, // t _645;.    int 
	0x5f, 0x36, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // _685 = 1;.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, // oat _686 = 0.003
	0x39, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, // 90625;.    for (
	0x3b, 0x20, 0x5f, 0x36, 0x38, 0x35, 0x20, 0x3c, 0x20, 0x34, 0x3b, 0x20, 0x5f, 0x36, 0x38, 0x37, // ; _685 < 4; _687
	0x20, 0x3d, 0x20, 0x5f, 0x36, 0x34, 0x35, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x36, 0x20, 0x3d, 0x20, //  = _645, _686 = 
	0x5f, 0x34, 0x30, 0x39, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x35, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, // _409, _685++).  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //   {.        if (
	0x5f, 0x36, 0x38, 0x35, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x33, 0x38, 0x36, 0x29, 0x0a, 0x20, 0x20, // _685 >= _386).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //     break;.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //    }.        flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x36, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, // at4 _605 = primi
	0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, // tivesSampler.sam
	0x70, 0x6c, 0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, // ple(primitivesSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // mplerSampler, fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, // oat2(0.875, 0.00
	0x31, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x36, 0x38, 0x36, 0x29, 0x29, // 1953125 + _686))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.        float 
	0x5f, 0x36, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x28, // _620 = (length((
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x33, 0x34, 0x38, 0x2c, 0x20, 0x5f, 0x33, 0x34, // float4(_348, _34
	0x35, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x69, 0x65, 0x77, // 5.y, _mtl_u.view
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, // Infos.y, 1.0) * 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, // float4x4(primiti
	0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // vesSampler.sampl
	0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, // e(primitivesSamp
	0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // lerSampler, floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, // t2(0.125, 0.0019
	0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x36, 0x38, 0x36, 0x29, 0x29, 0x2c, 0x20, // 53125 + _686)), 
	0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // primitivesSample
	0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, // r.sample(primiti
	0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // vesSamplerSample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x33, 0x37, 0x35, 0x2c, // r, float2(0.375,
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x5f, //  0.001953125 + _
	0x36, 0x38, 0x36, 0x29, 0x29, 0x2c, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, // 686)), primitive
	0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // sSampler.sample(
	0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // primitivesSample
	0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // rSampler, float2
	0x28, 0x30, 0x2e, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x39, 0x35, 0x33, // (0.625, 0.001953
	0x31, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x36, 0x38, 0x36, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, // 125 + _686)), fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, // oat4(0.0, 0.0, 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, // .0, 1.0))).xyz) 
	0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, // - 1.0) * 128.0;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, //         float _4
	0x30, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x30, 0x35, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 06 = _605.x;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x33, 0x34, 0x20, //      float _634 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x30, 0x2e, // = fast::clamp(0.
	0x35, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x36, 0x32, // 5 + ((0.5 * (_62
	0x30, 0x20, 0x2d, 0x20, 0x5f, 0x36, 0x38, 0x37, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x34, 0x30, // 0 - _687)) / _40
	0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // 6), 0.0, 1.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x6d, 0x69, //        _645 = mi
	0x78, 0x28, 0x5f, 0x36, 0x32, 0x30, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x37, 0x2c, 0x20, 0x5f, 0x36, // x(_620, _687, _6
	0x33, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x30, 0x36, 0x20, 0x2a, 0x20, 0x5f, // 34) - ((_406 * _
	0x36, 0x33, 0x34, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x36, // 634) * (1.0 - _6
	0x33, 0x34, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, // 34));.        _4
	0x30, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x38, 0x36, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x30, // 09 = _686 + 0.00
	0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 390625;.    }.  
	0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, //   out.bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x36, // ata0 = float4(_6
	0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // 87, 0.0, 0.0, 0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, // 0);.    return o
	0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x40, 0x00,                               // ut;.}....@.
};
