if(EMSCRIPTEN)
    return()
endif()

file(GLOB SHADER_FILES  Source/*.vs 
                        Source/*.fs
                        Source/*.cs
                        )

set(shaders_output "${CMAKE_CURRENT_SOURCE_DIR}/Cache")
set(shaders_inc_file "${shaders_output}/EmbeddedShaders.h")
FILE(WRITE ${shaders_inc_file} "// generated by CMake\n")

set(shaders_cpp_file "${shaders_output}/EmbeddedShaders.cpp")
FILE(WRITE ${shaders_cpp_file} "// generated by CMake\n")
FILE(WRITE ${shaders_cpp_file} "#include \"EmbeddedShaders.h\"\nstatic const bgfx::EmbeddedShader s_embeddedShaders[] =\n{\n")
set(SHADER_OUTPUT_FILES "")

foreach(SHADER ${SHADER_FILES})
  get_filename_component(FILE_NAME ${SHADER} NAME_WE)
  get_filename_component(FILE_NAME_EXT ${SHADER} EXT)
  
  if(${FILE_NAME_EXT} STREQUAL ".vs")
      set(SHADER_OUTPUT_TARGET "${shaders_output}/${FILE_NAME}_vs_dx11.h")

      #message(${SHADER_OUTPUT_TARGET})

      add_custom_command(
        OUTPUT ${SHADER_OUTPUT_TARGET}
        COMMAND "$<TARGET_FILE:shaderc>" -f ${SHADER} -o ${SHADER_OUTPUT_TARGET} --platform windows -p vs_5_0 -O 3 --type vertex --bin2c ${FILE_NAME}_vs_dx11
        COMMAND "$<TARGET_FILE:shaderc>" -f ${SHADER} -o "${shaders_output}/${FILE_NAME}_vs_dx9.h" --platform windows -p vs_3_0 -O 3 --type vertex --bin2c ${FILE_NAME}_vs_dx9
        #COMMAND "$<TARGET_FILE:shaderc>" -f ${SHADER} -o "${CMAKE_CURRENT_BINARY_DIR}/${FILE_NAME}_vs_esl.h" --platform android --type vertex --bin2c ${FILE_NAME}_vs_esl
        COMMAND "$<TARGET_FILE:shaderc>" -f ${SHADER} -o "${shaders_output}/${FILE_NAME}_vs_glsl.h" --platform asm.js -p 120 --type vertex --bin2c ${FILE_NAME}_vs_glsl
        COMMAND "$<TARGET_FILE:shaderc>" -f ${SHADER} -o "${CMAKE_SOURCE_DIR}/bin/Nodes/Shaders/${FILE_NAME}_vs.bin" --platform asm.js -p 150 --type vertex
        COMMAND "$<TARGET_FILE:shaderc>" -f ${SHADER} -o "${shaders_output}/${FILE_NAME}_vs_mtl.h" --platform osx -p metal --type vertex --bin2c ${FILE_NAME}_vs_mtl
        COMMAND "$<TARGET_FILE:shaderc>" -f ${SHADER} -o "${shaders_output}/${FILE_NAME}_vs_spv.h" --platform linux -p spirv --type vertex --bin2c ${FILE_NAME}_vs_spv
        DEPENDS ${SHADER})
      FILE(APPEND ${shaders_inc_file} "#include \"${FILE_NAME}_vs_dx11.h\"\n")
      FILE(APPEND ${shaders_inc_file} "#include \"${FILE_NAME}_vs_dx9.h\"\n")
      #FILE(APPEND ${shaders_inc_file} "#include \"${FILE_NAME}_vs_esl.h\"\n")
      FILE(APPEND ${shaders_inc_file} "#include \"${FILE_NAME}_vs_glsl.h\"\n")
      FILE(APPEND ${shaders_inc_file} "#include \"${FILE_NAME}_vs_mtl.h\"\n")
      FILE(APPEND ${shaders_inc_file} "#include \"${FILE_NAME}_vs_spv.h\"\n")
      message(${SHADER_OUTPUT_TARGET})
      set(SHADER_OUTPUT_FILES ${SHADER_OUTPUT_FILES} ${SHADER_OUTPUT_TARGET})
      #message(${SHADER_OUTPUT_FILES});
      FILE(APPEND ${shaders_cpp_file} "BGFX_EMBEDDED_SHADER(${FILE_NAME}_vs),\n")
   endif()
   
endforeach(SHADER)

#message(${SHADER_OUTPUT_FILES});
FILE(APPEND ${shaders_cpp_file} "BGFX_EMBEDDED_SHADER_END()\n};\n")
add_custom_target(Shaders DEPENDS ${SHADER_OUTPUT_FILES} shaderc)


